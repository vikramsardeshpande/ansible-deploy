---
# Deploy enrollment.war base + solution package
- name: "{{ monitise_root }}/tomcat/webapps/enrollment exist or not"
  stat: path={{ monitise_root }}/tomcat/webapps/enrollment
  register: check_path_enrollment1
  when: backup_option

- name: "{{ monitise_root }}/tomcat/webapps/enrollment status"
  debug: msg="Skipping the enrollment backup"
  when:  backup_option and check_path_enrollment1.stat.exists==false

- name: backup old enrollment install
  shell: zip -r  {{ backup_applications }}/enrollment-backup{{ ansible_date_time['date'] + '_' + ansible_date_time['time'].replace(':', '_') }}.zip {{ monitise_root }}/tomcat/webapps/enrollment*
        chdir={{ monitise_root }}/tomcat/webapps
  when: backup_option and check_path_enrollment1.stat.exists


- name: "create {{ script_temp_dir }}"
  file: path={{ script_temp_dir }} state=directory mode=755

- name: "create {{ script_temp_dir }} directories"
  file: path={{ script_temp_dir }}/{{ item }} state=directory mode=755
  with_items:
  - enrollment
  - enrollment-solution

- name: extract enrollment.war file 
  shell: unzip -o {{ backup_root }}/COREBuilds/{{ core_branch }}/{{ core_build }}/Enrollment/{{ enrollment_base_package }}
         chdir={{ script_temp_dir }}/enrollment

- name: checking enrollment solution package exist or not
  stat: path={{ backup_root }}/PSBuilds/{{ psbuild_number }}/{{ enrollment_solution_package }}
  register: check_path_enrollment2
  when: deploy_solution

- name: enrollment solution package status
  debug: msg="enrollment solution package not found"
  when:  deploy_solution and  check_path_enrollment2.stat.exists==false

- name: unzip the solution package
  shell: unzip -o {{ backup_root }}/PSBuilds/{{ psbuild_number }}/{{ enrollment_solution_package }} 
         chdir={{ script_temp_dir }}/enrollment-solution
  when: deploy_solution  and check_path_enrollment2.stat.exists

- name: overlay enrollment solution package
  shell: /bin/cp -pbr --suffix=.bkp {{ script_temp_dir }}/enrollment-solution/enrollment/* {{ script_temp_dir }}/enrollment/
  when: deploy_solution  and check_path_enrollment2.stat.exists

- name: generate connection.properites file 
  template: src=connection.properties.j2 dest={{ script_temp_dir }}/enrollment/WEB-INF/application/conf/connection.properties backup=yes

- name: copy log4j.properties
  copy: src=log4j.properties dest={{ script_temp_dir }}/enrollment/WEB-INF/application/conf backup=yes

- name: copy log4j.properties
  copy: src=log4j.properties dest={{ script_temp_dir }}/enrollment/WEB-INF/classes backup=yes

- name: create new enrollment war file 
  shell: zip -r ../enrollment.war  META-INF/MANIFEST.MF *
         chdir={{ script_temp_dir }}/enrollment

- name: delete tomcat work directory
  shell: rm -rf {{ monitise_root }}/tomcat/work/Catalina/localhost/enrollment {{ monitise_root }}/tomcat/webapps/enrollment {{ monitise_root }}/tomcat/webapps/enrollment.war 

- name: deploy new enrollment 
  shell: cp {{ script_temp_dir }}/enrollment.war {{ monitise_root }}/tomcat/webapps


- name: remove temp enrollment directory
  shell: rm -rf {{ script_temp_dir }}/enrollment*  
